version: '3.7'

services:
  database:
    container_name: 'API_DB_PAW_Final'
    restart: always
    image: postgres:12
    volumes:
      - database-data:/var/lib/data/
    environment:
      - POSTGRES_USER=test
      - POSTGRES_PASSWORD=passw0rd
      - POSTGRES_DB=apidb
    ports:
      - "5432:5432"
    networks:
      - api_network

  backend:
    container_name: 'API_BackEnd_PAW_Final'
    restart: unless-stopped
    build:
      context: './backend'
      dockerfile: 'Dockerfile'
    volumes:
        - ./backend:/go/src/IdentityCardReader
    depends_on:
        - database
    environment: 
        - WAIT_HOSTS=database:5432
        - CHOKIDAR_USEPOLLING=true
    links:
        - database
    networks:
      - api_network
      - frontend_network

  
  frontend:
    container_name: 'Frontend_Final'
    restart: unless-stopped
    depends_on:
        - backend
    build:
        context: './frontend'
        dockerfile: 'Dockerfile'
    volumes:
        - ./frontend:/app
        - /app/node_modules
    environment: 
        - CHOKIDAR_USEPOLLING=true
    networks:
        - frontend_network

  proxy:
    container_name: 'API_Proxy_Final'
    restart: always
    depends_on: 
      - frontend
      - backend
    build:
      context: './proxy'
      dockerfile: 'Dockerfile'
    ports:
       - '8082:80'
    networks:
     - frontend_network


volumes:
  database-data:

networks:
    frontend_network:
        driver: bridge
    api_network:
        driver: bridge
        driver: bridge
